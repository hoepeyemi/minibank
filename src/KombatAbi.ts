export const KomatAbi = [
  {
    type: 'constructor',
    inputs: [{ name: '_owner', type: 'address', internalType: 'address' }],
    stateMutability: 'nonpayable',
  },
  { type: 'receive', stateMutability: 'payable' },
  {
    type: 'function',
    name: 'bets',
    inputs: [{ name: '', type: 'uint256', internalType: 'uint256' }],
    outputs: [
      { name: 'startTimeStamp', type: 'uint256', internalType: 'uint256' },
      { name: 'endTimeStamp', type: 'uint256', internalType: 'uint256' },
      { name: 'betCreator', type: 'address', internalType: 'address' },
      { name: 'betName', type: 'string', internalType: 'string' },
      { name: 'betId', type: 'uint256', internalType: 'uint256' },
      { name: 'betToken', type: 'address', internalType: 'contract IERC20' },
      { name: 'amount', type: 'uint256', internalType: 'uint256' },
      { name: 'winner', type: 'address', internalType: 'address' },
      { name: 'betDisputed', type: 'bool', internalType: 'bool' },
      { name: 'betClaimed', type: 'bool', internalType: 'bool' },
    ],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'claim',
    inputs: [{ name: '_betId', type: 'uint256', internalType: 'uint256' }],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'createBet',
    inputs: [
      { name: '_actors', type: 'address[]', internalType: 'address[]' },
      { name: '_betName', type: 'string', internalType: 'string' },
      { name: '_betDuration', type: 'uint256', internalType: 'uint256' },
      { name: '_betCreator', type: 'address', internalType: 'address' },
      { name: '_betToken', type: 'address', internalType: 'address' },
      { name: '_amount', type: 'uint256', internalType: 'uint256' },
      { name: 'useNativeEth', type: 'bool', internalType: 'bool' },
    ],
    outputs: [{ name: '_betId', type: 'uint256', internalType: 'uint256' }],
    stateMutability: 'payable',
  },
  {
    type: 'function',
    name: 'enterBet',
    inputs: [
      { name: '_betId', type: 'uint256', internalType: 'uint256' },
      { name: 'enter', type: 'bool', internalType: 'bool' },
    ],
    outputs: [],
    stateMutability: 'payable',
  },
  {
    type: 'function',
    name: 'enterWin',
    inputs: [
      { name: '_betId', type: 'uint256', internalType: 'uint256' },
      { name: '_win', type: 'bool', internalType: 'bool' },
    ],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'getBetDetails',
    inputs: [{ name: '_betId', type: 'uint256', internalType: 'uint256' }],
    outputs: [
      {
        name: '_bet',
        type: 'tuple',
        internalType: 'struct Bet',
        components: [
          { name: 'actors', type: 'address[]', internalType: 'address[]' },
          { name: 'startTimeStamp', type: 'uint256', internalType: 'uint256' },
          { name: 'endTimeStamp', type: 'uint256', internalType: 'uint256' },
          { name: 'betCreator', type: 'address', internalType: 'address' },
          { name: 'betName', type: 'string', internalType: 'string' },
          { name: 'betId', type: 'uint256', internalType: 'uint256' },
          {
            name: 'betToken',
            type: 'address',
            internalType: 'contract IERC20',
          },
          { name: 'amount', type: 'uint256', internalType: 'uint256' },
          { name: 'winner', type: 'address', internalType: 'address' },
          { name: 'betDisputed', type: 'bool', internalType: 'bool' },
          { name: 'betClaimed', type: 'bool', internalType: 'bool' },
        ],
      },
    ],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'openDispute',
    inputs: [{ name: '_betId', type: 'uint256', internalType: 'uint256' }],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'owner',
    inputs: [],
    outputs: [{ name: '', type: 'address', internalType: 'address' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'recoverERC20',
    inputs: [{ name: 'token', type: 'address', internalType: 'address' }],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'recoverEth',
    inputs: [],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'registerToken',
    inputs: [
      { name: 'token', type: 'address', internalType: 'address' },
      { name: 'register', type: 'bool', internalType: 'bool' },
    ],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'renounceOwnership',
    inputs: [],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'solveDispute',
    inputs: [
      {
        name: '_disputeParams',
        type: 'tuple',
        internalType: 'struct DisputeParams',
        components: [
          { name: 'betId', type: 'uint256', internalType: 'uint256' },
          { name: 'winner', type: 'address', internalType: 'address' },
          { name: 'toggleDispute', type: 'bool', internalType: 'bool' },
          { name: 'slashRewards', type: 'bool', internalType: 'bool' },
        ],
      },
    ],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'totalDepositedUser',
    inputs: [{ name: '', type: 'address', internalType: 'address' }],
    outputs: [{ name: '', type: 'uint256', internalType: 'uint256' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'totalEthDeposited',
    inputs: [],
    outputs: [{ name: '', type: 'uint256', internalType: 'uint256' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'totalWonUser',
    inputs: [{ name: '', type: 'address', internalType: 'address' }],
    outputs: [{ name: '', type: 'uint256', internalType: 'uint256' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'transferOwnership',
    inputs: [{ name: 'newOwner', type: 'address', internalType: 'address' }],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'event',
    name: 'BetCreated',
    inputs: [
      {
        name: '_betId',
        type: 'uint256',
        indexed: true,
        internalType: 'uint256',
      },
      {
        name: 'actor1',
        type: 'address',
        indexed: true,
        internalType: 'address',
      },
      {
        name: 'actor2',
        type: 'address',
        indexed: true,
        internalType: 'address',
      },
      {
        name: 'betName',
        type: 'string',
        indexed: false,
        internalType: 'string',
      },
      {
        name: 'duration',
        type: 'uint256',
        indexed: false,
        internalType: 'uint256',
      },
      {
        name: 'startTimeStamp',
        type: 'uint256',
        indexed: false,
        internalType: 'uint256',
      },
      {
        name: 'creator',
        type: 'address',
        indexed: false,
        internalType: 'address',
      },
      {
        name: 'betToken',
        type: 'address',
        indexed: false,
        internalType: 'address',
      },
      {
        name: 'betAmount',
        type: 'uint256',
        indexed: false,
        internalType: 'uint256',
      },
    ],
    anonymous: false,
  },
  {
    type: 'event',
    name: 'Claimed',
    inputs: [
      {
        name: '_betId',
        type: 'uint256',
        indexed: true,
        internalType: 'uint256',
      },
      {
        name: 'amount',
        type: 'uint256',
        indexed: true,
        internalType: 'uint256',
      },
      {
        name: 'actor',
        type: 'address',
        indexed: true,
        internalType: 'address',
      },
    ],
    anonymous: false,
  },
  {
    type: 'event',
    name: 'DisputeResolved',
    inputs: [
      {
        name: '_betId',
        type: 'uint256',
        indexed: false,
        internalType: 'uint256',
      },
      {
        name: 'rewardSlashed',
        type: 'bool',
        indexed: false,
        internalType: 'bool',
      },
    ],
    anonymous: false,
  },
  {
    type: 'event',
    name: 'EnterBet',
    inputs: [
      {
        name: 'actor',
        type: 'address',
        indexed: true,
        internalType: 'address',
      },
      {
        name: '_betId',
        type: 'uint256',
        indexed: true,
        internalType: 'uint256',
      },
      {
        name: 'amount',
        type: 'uint256',
        indexed: true,
        internalType: 'uint256',
      },
    ],
    anonymous: false,
  },
  {
    type: 'event',
    name: 'EnterWin',
    inputs: [
      {
        name: '_betId',
        type: 'uint256',
        indexed: false,
        internalType: 'uint256',
      },
      { name: 'win', type: 'bool', indexed: false, internalType: 'bool' },
      {
        name: 'actor',
        type: 'address',
        indexed: false,
        internalType: 'address',
      },
    ],
    anonymous: false,
  },
  {
    type: 'event',
    name: 'EthRecoverd',
    inputs: [
      {
        name: '_amount',
        type: 'uint256',
        indexed: false,
        internalType: 'uint256',
      },
    ],
    anonymous: false,
  },
  {
    type: 'event',
    name: 'OpenDispute',
    inputs: [
      {
        name: '_betId',
        type: 'uint256',
        indexed: true,
        internalType: 'uint256',
      },
    ],
    anonymous: false,
  },
  {
    type: 'event',
    name: 'OwnershipTransferred',
    inputs: [
      {
        name: 'previousOwner',
        type: 'address',
        indexed: true,
        internalType: 'address',
      },
      {
        name: 'newOwner',
        type: 'address',
        indexed: true,
        internalType: 'address',
      },
    ],
    anonymous: false,
  },
  {
    type: 'event',
    name: 'RegisterToken',
    inputs: [
      {
        name: 'token',
        type: 'address',
        indexed: false,
        internalType: 'address',
      },
      { name: 'register', type: 'bool', indexed: false, internalType: 'bool' },
    ],
    anonymous: false,
  },
  {
    type: 'event',
    name: 'TokenRecovered',
    inputs: [
      {
        name: 'token',
        type: 'address',
        indexed: false,
        internalType: 'address',
      },
      {
        name: 'amount',
        type: 'uint256',
        indexed: false,
        internalType: 'uint256',
      },
    ],
    anonymous: false,
  },
  {
    type: 'error',
    name: 'AddressEmptyCode',
    inputs: [{ name: 'target', type: 'address', internalType: 'address' }],
  },
  {
    type: 'error',
    name: 'AddressInsufficientBalance',
    inputs: [{ name: 'account', type: 'address', internalType: 'address' }],
  },
  { type: 'error', name: 'AlreadyEntered', inputs: [] },
  {
    type: 'error',
    name: 'Auth',
    inputs: [{ name: '', type: 'address', internalType: 'address' }],
  },
  { type: 'error', name: 'BetClaimed', inputs: [] },
  {
    type: 'error',
    name: 'BetEnded',
    inputs: [{ name: '', type: 'uint256', internalType: 'uint256' }],
  },
  { type: 'error', name: 'BetNotCreated', inputs: [] },
  {
    type: 'error',
    name: 'BetNotEnded',
    inputs: [{ name: '', type: 'uint256', internalType: 'uint256' }],
  },
  {
    type: 'error',
    name: 'CantDispute',
    inputs: [{ name: '', type: 'uint256', internalType: 'uint256' }],
  },
  { type: 'error', name: 'Disputed', inputs: [] },
  { type: 'error', name: 'FailedInnerCall', inputs: [] },
  { type: 'error', name: 'InValidArrayLength', inputs: [] },
  { type: 'error', name: 'InvalidAmount', inputs: [] },
  { type: 'error', name: 'InvalidDispute', inputs: [] },
  {
    type: 'error',
    name: 'NoTokenTransfer',
    inputs: [{ name: '', type: 'uint256', internalType: 'uint256' }],
  },
  {
    type: 'error',
    name: 'NotBetWinner',
    inputs: [{ name: '', type: 'address', internalType: 'address' }],
  },
  { type: 'error', name: 'NotRegistered', inputs: [] },
  {
    type: 'error',
    name: 'OwnableInvalidOwner',
    inputs: [{ name: 'owner', type: 'address', internalType: 'address' }],
  },
  {
    type: 'error',
    name: 'OwnableUnauthorizedAccount',
    inputs: [{ name: 'account', type: 'address', internalType: 'address' }],
  },
  { type: 'error', name: 'Reentering', inputs: [] },
  {
    type: 'error',
    name: 'SafeERC20FailedOperation',
    inputs: [{ name: 'token', type: 'address', internalType: 'address' }],
  },
  { type: 'error', name: 'TransferFailed', inputs: [] },
  { type: 'error', name: 'WinningStatusUpdated', inputs: [] },
] as const;
